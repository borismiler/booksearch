{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Boris\\\\Desktop\\\\fpl\\\\book-proj\\\\src\\\\BookSearch.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Form, FormControl, Container, Row, Col, Card, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookSearch = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [books, setBooks] = useState([]);\n  const [sortByYear, setSortByYear] = useState(false);\n  useEffect(() => {\n    const fetchBooks = async () => {\n      if (query.length < 3) return;\n      try {\n        const response = await axios.get(`https://openlibrary.org/search.json?q=${query}`);\n        setBooks(response.data.docs);\n      } catch (error) {\n        console.error('Error fetching books:', error);\n      }\n    };\n    const debounceFetchBooks = setTimeout(fetchBooks, 500);\n    return () => clearTimeout(debounceFetchBooks);\n  }, [query]);\n  const sortedBooks = [...books].sort((a, b) => {\n    if (sortByYear) {\n      return (a.first_publish_year || 0) - (b.first_publish_year || 0);\n    }\n    return 0; // Default to relevance sorting\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: \"my-4\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        type: \"text\",\n        placeholder: \"Search for a book\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n      type: \"radio\",\n      name: \"sortOptions\",\n      defaultValue: false,\n      onChange: value => setSortByYear(value),\n      children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: 0,\n        id: 'relevanceBtn',\n        children: \"Relevance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: 1,\n        id: 'yearBtn',\n        children: \"Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: sortedBooks.map((book, index) => {\n        var _book$author_name, _book$isbn;\n        return /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          md: 6,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Author(s):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this), \" \", ((_book$author_name = book.author_name) === null || _book$author_name === void 0 ? void 0 : _book$author_name.join(', ')) || 'N/A', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 104\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Year:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this), \" \", book.first_publish_year || 'N/A', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 94\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"ISBN:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this), \" \", ((_book$isbn = book.isbn) === null || _book$isbn === void 0 ? void 0 : _book$isbn[0]) || 'N/A', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 85\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Pages:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this), \" \", book.number_of_pages_median || 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(BookSearch, \"5zgfMnQ+epTbHd7HMlR6WjZXB9U=\");\n_c = BookSearch;\nexport default BookSearch;\nvar _c;\n$RefreshReg$(_c, \"BookSearch\");","map":{"version":3,"names":["React","useState","useEffect","axios","Form","FormControl","Container","Row","Col","Card","ToggleButton","ToggleButtonGroup","jsxDEV","_jsxDEV","BookSearch","_s","query","setQuery","books","setBooks","sortByYear","setSortByYear","fetchBooks","length","response","get","data","docs","error","console","debounceFetchBooks","setTimeout","clearTimeout","sortedBooks","sort","a","b","first_publish_year","children","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","name","defaultValue","id","map","book","index","_book$author_name","_book$isbn","sm","md","lg","Body","Title","title","Text","author_name","join","isbn","number_of_pages_median","_c","$RefreshReg$"],"sources":["C:/Users/Boris/Desktop/fpl/book-proj/src/BookSearch.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, FormControl, Container, Row, Col, Card, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\r\n\r\ntype Book = {\r\n    title: string;\r\n    author_name?: string[];\r\n    first_publish_year?: number;\r\n    isbn?: string[];\r\n    number_of_pages_median?: number;\r\n};\r\n\r\nconst BookSearch: React.FC = () => {\r\n    const [query, setQuery] = useState('');\r\n    const [books, setBooks] = useState<Book[]>([]);\r\n    const [sortByYear, setSortByYear] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchBooks = async () => {\r\n            if (query.length < 3) return;\r\n            try {\r\n                const response = await axios.get(`https://openlibrary.org/search.json?q=${query}`);\r\n                setBooks(response.data.docs);\r\n            } catch (error) {\r\n                console.error('Error fetching books:', error);\r\n            }\r\n        };\r\n\r\n        const debounceFetchBooks = setTimeout(fetchBooks, 500);\r\n        return () => clearTimeout(debounceFetchBooks);\r\n    }, [query]);\r\n\r\n    const sortedBooks = [...books].sort((a, b) => {\r\n        if (sortByYear) {\r\n            return (a.first_publish_year || 0) - (b.first_publish_year || 0);\r\n        }\r\n        return 0; // Default to relevance sorting\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <Form className=\"my-4\">\r\n                <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Search for a book\"\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                />\r\n            </Form>\r\n            <ToggleButtonGroup\r\n                type=\"radio\"\r\n                name=\"sortOptions\"\r\n                defaultValue={false}\r\n                onChange={(value) => setSortByYear(value)}\r\n            >\r\n                <ToggleButton value={0} id={'relevanceBtn'}>Relevance</ToggleButton>\r\n                <ToggleButton value={1} id={'yearBtn'}>Year</ToggleButton>\r\n            </ToggleButtonGroup>\r\n            <Row>\r\n                {sortedBooks.map((book, index) => (\r\n                    <Col key={index} sm={12} md={6} lg={4}>\r\n                        <Card className=\"mb-4\">\r\n                            <Card.Body>\r\n                                <Card.Title>{book.title}</Card.Title>\r\n                                <Card.Text>\r\n                                    <strong>Author(s):</strong> {book.author_name?.join(', ') || 'N/A'}<br />\r\n                                    <strong>Year:</strong> {book.first_publish_year || 'N/A'}<br />\r\n                                    <strong>ISBN:</strong> {book.isbn?.[0] || 'N/A'}<br />\r\n                                    <strong>Pages:</strong> {book.number_of_pages_median || 'N/A'}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default BookSearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}